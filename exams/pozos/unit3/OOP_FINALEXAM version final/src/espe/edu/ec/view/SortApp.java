package espe.edu.ec.view;

import utils.InputValidation;
import espe.edu.ec.controller.SortingContext;
import espe.edu.ec.controller.SortingStrategy;
import espe.edu.ec.model.elements;
import java.util.Arrays;
import utils.FormsHandler;

/**
 *
 * @author QUILUMBAQUIN JAIRO,STEVEN POZO DCC0-ESPE: CODEX++
 */
public class SortApp extends javax.swing.JFrame {

    SortingContext context;
    InputValidation input;
    FormsHandler fmrs;
    elements sort;

    public SortApp() {
        initComponents();
        input = new InputValidation();
        fmrs = new FormsHandler();
        TFsortedElements.setEditable(false);
        TFmethod.setEditable(false);
        sort = new elements();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        TFsortedElements = new javax.swing.JTextField();
        jToggleButton1 = new javax.swing.JToggleButton();
        TFElementsToBeSorted = new javax.swing.JTextField();
        lblError = new javax.swing.JLabel();
        TFmethod = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("SortApp");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, -1, -1));

        jLabel3.setText("Elements To be Sorted");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, -1, -1));

        jLabel4.setText("Sorted Elements");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, -1, -1));
        jPanel1.add(TFsortedElements, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 170, 200, -1));

        jToggleButton1.setText("Sort");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jToggleButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 210, -1, -1));

        TFElementsToBeSorted.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TFElementsToBeSortedKeyTyped(evt);
            }
        });
        jPanel1.add(TFElementsToBeSorted, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, 200, -1));

        lblError.setText("_");
        jPanel1.add(lblError, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 110, -1, -1));
        jPanel1.add(TFmethod, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 170, 170, -1));

        jLabel2.setText("Used Method");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 140, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TFElementsToBeSortedKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TFElementsToBeSortedKeyTyped

        input.NumberValidation(TFElementsToBeSorted, evt, lblError, 100);


    }//GEN-LAST:event_TFElementsToBeSortedKeyTyped

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        SetSortMethtod();
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SortApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SortApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SortApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SortApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SortApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TFElementsToBeSorted;
    private javax.swing.JTextField TFmethod;
    private javax.swing.JTextField TFsortedElements;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JLabel lblError;
    // End of variables declaration//GEN-END:variables

    void SetSortMethtod() {
        SortingStrategy sortmethod;
        int[] tosort;
        int[] ordered;

        context = new SortingContext();

        tosort = textFieldToArray();
        sortmethod = context.setSortTrategy(tosort.length);
        
        ordered = sortmethod.sort(tosort);
        showSortArray(ordered);
        String name=printNameSort();
        
        
        sort.setUnsorted(textFieldToArray());
        sort.setSize(ordered.length);
        sort.setSorted(ordered);
        sort.setSortAlgorithm(name);

        savetoDB(sort);

    }

    int[] textFieldToArray() {

        String numbersC[];
        numbersC = TFElementsToBeSorted.getText().split(",");
        int numberA[] = new int[numbersC.length];

        for (int i = 0; i < numbersC.length; i++) {
            numberA[i] = Integer.parseInt(numbersC[i]);
        }
        

        return numberA;
    }

    String ArrayTostring(int ordered[]) {
        String toset;
        toset = Arrays.toString(ordered);
        return toset;
    }

    void showSortArray(int ordered[]) {
        String tosetstring;
        tosetstring = ArrayTostring(ordered);
        TFsortedElements.setText(tosetstring);

    }

    void savetoDB(elements sortToDB) {

        fmrs.saveElementsToDB(sortToDB);

    }

    String printNameSort() {
        String name[];
        String nameSort = null;
        name = TFElementsToBeSorted.getText().split(",");
        // name.length;
        System.out.println(name.length);

        if (name.length > 0 && name.length < 3) {
            TFmethod.setText("BUBBLE SORT");
            nameSort = "BUBBLE SORT";
        }
        if (name.length > 3 && name.length < 7) {
            TFmethod.setText("INSERTION SORT");
            nameSort = "INSERTION SORT";
        }
        if (name.length > 7) {
            TFmethod.setText("QUICK SORT");
            nameSort = "QUICK SORT";
        }

        return nameSort;

    }

}
